// debounceTime - if is has remainded unchanged for 400 milliseconds, then run
// throttle(() => interval(500)) add first letter and wait 500 to new (during 500 all are ignored)
// throttleTime(500) - the same as above 
// switchMap - if observable not finished, and new stream is available, then current stream is finished and new is emmited

fromEvent<any>(this.input.nativElement, "keyup")
  .pipe(
    map((event) => event.target.value),
    debounceTime(400), // to run after timeout
    distinctUntilChanged(), // to avoid duplicated values
    switchMap(search => this.loadCourses(search))   // where this.loadCourses is observable
  )
  .subscribe(console.log);
